releaseVersion = false
term.clear()

function standardConfermaion()
	--local waitingConfermation = true
	--while waitingConfermation == true do
	while true do
		event, param1, param2 = os.pullEvent("char")
		if param1 == "y" then
			-- waitingConfermation = false
			return true
		elseif param1 == "n" then
			-- waitingConfermation = false
			return false
		end
	end
end

function cl ()
	term.setCursorPos(1,1)
	term.clear()
	print("  _____      _  ____   _____ ")
	print(" |  __ \\    | |/ __ \\ / ____|")
	print(" | |__) |___| | |  | | (___  ")
	print(" |  _  // _ \\ | |  | |\\___ \\ ")
	print(" | | \\ \\  __/ | |__| |____) |")
	print(" |_|  \\_\\___|_|\\____/|_____/ ")
	print("                            v0.1")
	print("")
end

function fcl ()
	term.setCursorPos(1,8)
	term.clearLine()
end

function sl()
	if releaseVersion then
		textutils.slowPrint("...", 5)
	else
		write("...")
	end
end

-- os.loadAPI("/disk/lib/util/common.lua")
print("  _____      _  ____   _____ ")
print(" |  __ \\    | |/ __ \\ / ____|")
print(" | |__) |___| | |  | | (___  ")
print(" |  _  // _ \\ | |  | |\\___ \\ ")
print(" | | \\ \\  __/ | |__| |____) |")
print(" |_|  \\_\\___|_|\\____/|_____/ ")
print("                            v0.1")
print("")

write("Would you like to install (Y/N)?")
local confirm = standardConfermaion()
-- os.unloadAPI("/disk/lib/util/common.lua")
if confirm then
	cl()
	write("RelOS v0.1 Installing")
	sl()
	--write("\n")
	cl()
	write("Installing RelOS Apis")
	sl()
	--write("\n")
	shell.run("/disk/installAPI.lua")
	fcl()
	write("Installing RelOS Bins")
	sl()
	--write("\n")
	shell.run("/disk/installBIN.lua")

	fcl()
	write("Setting up BootLoader for ")
	--write("\n")
	if fs.exists("/startup") then fs.delete("/startup")  end
	if turtle ~= nil then
		write("Turtle")
		fs.copy("/disk/thinTurtleClientBoot.lua", "/startup")
	else
		write("Server")
		fs.copy("/disk/thinTurtleServerBoot.lua", "/startup")
	end
	sl()
	cl()
	write("Running startup app")
	sl()
	write("\n")
	shell.run("/startup")
	--if turtle ~= nil then
		--shell.run("/bin/StorageRoom/build") --Testing
		--shell.run("/bin/satellite/buildTest") --Testing
		--shell.run("cd /bin/satellite")
	--end
else
	write("Skipping Install")
	sl()
	write("Passing boot to HDD")
	sl()
	if fs.exists("/startup") then shell.run("/startup")
	else
		write("No Boot found on HDD")
		sl()
		write("Defaulting to rom")
		sl()
	end
end